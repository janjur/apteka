-- MySQL Script generated by MySQL Workbench
-- 12/04/16 14:33:46
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Mikroblog
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Mikroblog
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Mikroblog` ;
USE `Mikroblog` ;

-- -----------------------------------------------------
-- Table `Mikroblog`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Mikroblog`.`Roles` (
  `idRoles` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `RoleName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idRoles`),
  UNIQUE INDEX `idRoles_UNIQUE` (`idRoles` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Mikroblog`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Mikroblog`.`Users` (
  `IdUsers` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Login` VARCHAR(32) NOT NULL,
  `Password` VARCHAR(32) NOT NULL,
  `CreationDate` DATETIME NOT NULL DEFAULT NOW(),
  `UserRole` INT UNSIGNED NOT NULL,
  `NumPosts` INT UNSIGNED NULL DEFAULT 0,
  `NumComments` INT UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`IdUsers`),
  UNIQUE INDEX `IdUsers_UNIQUE` (`IdUsers` ASC),
  INDEX `fk_Users_Roles1_idx` (`UserRole` ASC),
  UNIQUE INDEX `Login_UNIQUE` (`Login` ASC),
  CONSTRAINT `fk_Users_Roles1`
    FOREIGN KEY (`UserRole`)
    REFERENCES `Mikroblog`.`Roles` (`idRoles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Mikroblog`.`Posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Mikroblog`.`Posts` (
  `idPosts` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Content` VARCHAR(300) NOT NULL,
  `CreationDate` DATETIME NOT NULL DEFAULT NOW(),
  `Author` INT UNSIGNED NOT NULL,
  `NumComments` INT UNSIGNED NULL DEFAULT 0,
  PRIMARY KEY (`idPosts`),
  INDEX `fk_Posts_Users1_idx` (`Author` ASC),
  UNIQUE INDEX `Post_Id_UNIQUE` (`idPosts` ASC),
  CONSTRAINT `fk_Posts_Users1`
    FOREIGN KEY (`Author`)
    REFERENCES `Mikroblog`.`Users` (`IdUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Mikroblog`.`Comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Mikroblog`.`Comments` (
  `idComments` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `Content` VARCHAR(300) NOT NULL,
  `CreationDate` DATETIME NOT NULL DEFAULT NOW(),
  `Author` INT UNSIGNED NOT NULL,
  `ParentPost` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idComments`),
  INDEX `fk_Comments_Users1_idx` (`Author` ASC),
  UNIQUE INDEX `Comment_Id_UNIQUE` (`idComments` ASC),
  INDEX `fk_Comments_Posts1_idx` (`ParentPost` ASC),
  CONSTRAINT `fk_Comments_Users1`
    FOREIGN KEY (`Author`)
    REFERENCES `Mikroblog`.`Users` (`IdUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comments_Posts1`
    FOREIGN KEY (`ParentPost`)
    REFERENCES `Mikroblog`.`Posts` (`idPosts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Mikroblog`;

DELIMITER $$
USE `Mikroblog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Mikroblog`.`Posts_AFTER_INSERT` AFTER INSERT ON `Posts` FOR EACH ROW
BEGIN
	update `Users` set NumPosts = NumPosts + 1 where idUsers = new.Author;
END$$

USE `Mikroblog`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Mikroblog`.`Comments_AFTER_INSERT` AFTER INSERT ON `Comments` FOR EACH ROW
BEGIN
	update `Users` set NumComments = NumComments + 1 where idUsers = new.Author;
	update `Posts` set NumComments = NumComments + 1 where idPosts = new.ParentPost;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;